git의 모든 환경설정
git config --list  q를 누르면 다시 터미널로 돌아옴.

환경설정을 file로 열어보고 싶으면
git config --global -e

줄바꿈 운영체재마다 자동으로 바뀌게 해주는 명령어
git config --global core.autocrlf true

commit에서 관리해주는 branch는 master branch이다.

유용한 command
git init 깃폴더 초기화 (ls -al 로 폴더안을보면 .git/이라고 숨겨진 폴더가 생성이됨 
		    확인하려면 start 명령어 입력 Mac은 open
		    삭제하려면 rm -rf)

git status 깃의 상태를 알 수 있음. -s 를 붙히면 간단하게 볼 수 있음.

git config --global alias.st status : status 단축키를 st로 줄임.

git config --h 명령어의 속성값 등을 확인할 수 있음.


깃의 3가지 환경

Local 환경
working directory 	: 작업하는 공간 (수정, 작업) 
staging area 	: 버전 history에 저장할 공간(git add로 추가)
.git directory 	: 버전 history가 저장된 공간

wd 에서 sa로 옮겼다가 commit으로 sa -> .git_D로 보냄
버전을 다시 확인하고 싶으면 checkout이라는 명령어를 이용하여 꺼낼 수 있음.

Local 환경에서 push 해서 서버로 보내고 pull로 다운받음.

각각의 commit에는 hash코드가 부과되는데 이것을 이용하여 버전, 누가 작성했는지, 작성시간을 알 수 있음.

git이 tracking 중인 파일은 tracked에 있고, 아닌 경우 untracked에 있다.
tracked에도 이전 버전에서 수정된 modified된 file만 업로드가능하다.

git rm --cached <file> : staging area에 있는 file을 제거

git에 올리고 싶지 않은 파일들은 .gitignore 라는 폴더를 만들어서 못올리게한다.
echo *.log > .gitignore : gitignore에 모든 log 파일이 들어감.
build/ , build/.log : build 안에 모든 것, build안에 모든 .log 파일

git diff : (기본적으로 cached 옵션이 박혀있음)
diff --git a/c.txt(이전버전) b/c.txt(현재버전)을 비교한다.
index 6c5d3cd..2179222 100644
--- a/c.txt (이전버전)
+++ b/c.txt (변경된 현재버전)
@@ -1(이전파일의 첫번쨰줄) +1,2(새로변경된 사항은 1~2줄을 확인해라) @@
 asdf
+add

git diff --staged :
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..b5bd170
--- /dev/null (아무것도 없었다 원래)
+++ b/.gitignore (.gitignore 이라는 파일이 생겼다.)
@@ -0,0 +1 @@
+*.log
diff --git a/c.txt b/c.txt
new file mode 100644
index 0000000..6c5d3cd
--- /dev/null
+++ b/c.txt
@@ -0,0 +1 @@
+asdf
diff --git a/style.css b/style.css
new file mode 100644
index 0000000..6c5d3cd
--- /dev/null
+++ b/style.css
@@ -0,0 +1 @@
+asdf

cat <file> 파일 내용 확인.






